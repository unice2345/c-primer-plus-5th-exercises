大纲

C程序构成	
函数


------------
1. #include指示和头文件
#include是一个预处理指令(preprocessor directive)。预处理(preprocessor)是在代码编译之前要做的工作。

#include预处理指令，就是将后面的头文件内容包含到当前源文件中。

比如#include <stdio.h>，就是将stdio.h文件的内容包含到当前源文件中。

stdio.h是头文件(.h文件)，它是标准输入输出头文件，包含了输入输出相关函数(如printf)

2. main函数
每个C程序都必须有一个main函数，main函数是程序的入口，是程序开始执行的地方。
int是函数的返回类型。
{}内是函数体。

3. 注释
注释是对代码的说明，是给人看的，编译器不会编译注释。

/* 我是注释 */

可以多行注释：
/*
  我是多行注释
  我是第1行
  我是第2行
  ...
  我是第n行
*/！


// 我也是注释，我只能是1行

4. 花括号，函数体
{}用来表示函数体的开始和结束

5. 声明
int num;
声明语句(declaration statement)。编译器根据声明语句，为变量num在内存中申请存储空间。
int是关键字，表明了变量num的类型。
num是标识符(identifier),也就是变量的名字。编译器会将标识符和申请的特定内存空间对应起来。
C语言中，变量在使用之前必须进行声明。

5.1 数据类型
声明时需要指明数据类型，如整数、字符或浮点数。C语言中的变量都需指定数据类型。
5.2 命名规则
名字中可以有字母，数字和下划线；第一个字符必须是字母或下划线。

举例：
正确名字   错误名字
num         $num
cat2        2cat
Hot_Tub     Hot-Tub
taxRate     tax rate
_kcab       k'cab

6. 赋值
num = 1; 
这是个赋值语句(assignment statement)。表示将1赋给了变量num。
实际上，将值1存储到变量num所对应的内存空间

7. 调用printf函数
printf("I am a simple ");
参数：传递给函数的内容
函数调用(call, invoke)：函数被调用时，开始执行该函数，函数执行完毕，返回原来的位置继续执行。

printf: 打印输入的内容
\n: 换行符，在下一行的最左边开始新的一行
转义字符（escape sequence）：无法直接输入的字符，用转移符\修饰，构成一个转义字符，如换行符\n,Tab键\t

printf("The number is %d.\n", num);
占位符 %d
%表示在这个位置输出字符， d表示输出的是十进制整数。

8. return语句
main函数的返回值是int,所以最后要有一个返回值. return关键字用来给函数返回一个值。


-----
一个程序可以由多个函数组成.

函数原型：函数在使用之前需要声明原型，包括函数名、参数和返回值。
	函数原型要位于函数调用之前。
函数定义：函数的实现。

-----
程序调试：
程序中可能存在错误，通常叫bug，定位和解决错误的过程叫做调试(debug).

两类错误：
语法错误：造成编译失败，编译器会发出告警。容易定位和修改。
语义错误(逻辑错误)：能编译通过，但结果和预期不同。需要定位手段(跟踪调试，打日志)。



