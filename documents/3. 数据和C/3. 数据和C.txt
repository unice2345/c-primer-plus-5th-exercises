
3.2 变量和常量
常量：数据预先设定，在程序运行过程中无变化
变量：数据在程序运行过程中有变化或被赋值

3.3 数据类型关键字

常量：编译器通过书写辨认类型
变量：编译器通过声明语句中指定的类型来辨认

关键字
整数类型：int, long, short, unsigned, signed
字母型：char
小数类型：float, double, long double



存储方式：整数(integer)类型和浮点型(floating-point)
---------------------------------------------------
位，字节，字：
位(bit)：计算机最小的存储单位，只有两个值：0或1
字节(byte): 1个字节为8位，取值范围是0~255
字(word): 目前的计算机，1字是32位，有的机器是64位

整数(integer)
没有小数，以二进制方式存储

0 0 0 0 0 1 1 1

2^0 + 2^1 + 2^2 = 7


浮点数(floating-poing)
可以表示小数，将一个数分成小数和指数部分分别存储

+ .314159 1

+         :符号位
.314159   :小数部分
1         :指数部分

+ 0.314159 * 10^1 = 3.14159

计算机内部实际是用二进制存储的，所以指数部分实际是2次幂。


特点：
整数没有小数部分，浮点数有
浮点数表示的范围比整数大很多；
有一些算数运算，浮点数会损失精度；
实际任何区间内[1.0 ~ 2.0]内有无穷个值，浮点数不能都表示出来，只能是实际值的近似。
浮点数运算较慢。


3.4 C数据类型

3.4.1 int类型
有符号整数，存储到计算机的一个字中。一般是32位。

1）声明：
int num;
int num0 num1;
2）初始化(initialize)：为变量赋一个初始值。
int num = 10;
int num0 = 10, num1 = 20;
3) 打印: %d 格式说明符(format specifier)
printf("num is %d", num);
4) 八进制和十六进制
八进制，以8为基数，前缀0: 020 = 0 * 8^0 + 2 * 8^1 = 16
十六进制，以16为基数，前缀0x或0X: 0x20 = 0 * 16^0 + 2*16^1 = 32
	十六进制的每个位(0~15)恰好可以用4位的二进制表示
注意：计算机内部使用二进制编码进行存储
5）打印八进制和十六进制
八进制：%o
十六进制: %x或%X
打印前缀: %#o, %#x, %#X

3.4.2 其他整型
short int(short): 可能占用空间比int更少，一般是2个字节
long int(long)： 可能比int占用更多空间，一般和int相同，占用4个字节
long long int(long long): 可能比long占用更多空间，一般占用8个字节
unsigned int(unsigned): 非负数场合，可表示更大范围的正整数
其他包括：unsigned long, unsigned short, unsigned long long；
signed: 明确表示有符号整数 

标记long： l或L后缀

打印：
unsigned int   %u
long           %ld, %lx, %lo   
unsigned long  %lu
short          %hd

传递参数时，C自动将short型转换为int型

3.4.3 字符型
char: 存储字母和标点符号。技术上char是整型。
ASCII码：数字编码，用数字代表符号。范围是0~127.
C语言将1个字节定义为char类型的位数。
1）声明
char c;
2）字符常量和初始化
char c;
c = 'A';
c = 65; /* 允许但不鼓励 */

C将字符常量视为int型而非char型:
char c = 'B'；
'B'作为数值66存储在32位单元中，而c把66存储在8位单元中。
3）非打印字符
转义序列(escape sequence)
活动位置(active position): 下一个字符将出现的位置

\b 退格，退回一个空格
\f 走纸，移动到下一页的开始处
\n 换行，移动到下一行的开始处
\r 回车，移动当前行的开始处
\t 水平制表符，移动到下一个水平制表点
\v 垂直制表符，移动到下一个垂直制表点
\0oo 八进制值 数值编码
\xhh 十六进制值 数值编码

char a = '\032'

4) 打印
%c
用%d打印，得到一个整数

3.4.6 foat, double, long double类型
记数法：
指数记数法: 1.0e9

float: 至少能表示6位有效数字。通常系统用32位表示一个浮点数。
double: 至少能表示10位有效数字。通常系统用64位标书一个双精度浮点数。

1）声明
2) 常量
编译器将浮点常量当做double类型。
float: f或F后置
long double: l或L后缀
3) 打印
%f: float, double
%e: 指数记数法
%a：十六进制
%Lf, %Le, %La: long double

传递参数时，C自动将float类型转为double类型

3.4.9 类型大小
sizeof以字节为单位给出类型大小




