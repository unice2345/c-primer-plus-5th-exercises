6.2 while语句
----------------
while (expression)
	statement
	
例子1：
index = 1;               //初始化
while(index < 5)         //条件判断：入口条件，终止条件
{
	printf("%d ", index);//执行内容
	index++;             //更新条件
}

例子2：
index = 1;
while(index++ < 5)       //条件更新与条件判断放在一起
	printf("%d ", index);
	

6.3 关系表达式(relation expression)
--------------------------------------
关系运算符(relation operator)

<, <=, ==, >=, >, !=

浮点数比较只能用>和<
浮点数比较相等: 
	fabs(x - y) > 0.000001
	
6.3.1 真值
真表达式值为1，假表达式值为0
C中所有非零值都认为是真值，只有0被认为是假值

注意不要混淆=和==
x = 5     赋值运算，结果永远为真
x == 5	  关系运算

推荐写法：
x = 5
5 == x

6.3.5 关系运算符优先级
低于算数运算符，高于赋值运算符
x > y + 2
z = x > y
结合性：从左到右
x != y == z


6.5 for循环
----------------
包括：初始化，测试，更新
for (initialize; test; upate)
	statement

例子：
for(n = 0; n < 10; n++)
	printf("%d ", n);
	
	
6.7 逗号运算符
---------------
保证表达式按从左到右的次序运算
	逗号是顺序点，左边副作用在右边之前生效
	n++, y = 2*n
	
表达式的值是右边成员的值
	x = (y = 3, z = ++y);
	
	
6.8 do while循环
-----------------
判断条件在执行循环之后进行检查
do 
	statement
while(expression)

例子：
do
	scanf("%d", &number)
while(number != 20);


6.11 数组
----------
数组：线性存储一系列相同类型的值
float a[20];

通过下标(subscript)、索引(index)或偏移量(offset)访问数组的元素
a[10] = 4;

下标从0开始

for循环中使用数组
#define SIZE 10
int score[SIZE];
int i;
for(i = 0; i < SIZE; i++) {
	scanf("%d", &score[i]);
}

区分字符数组和字符串
字符数组：不含\0
字符串：含\0

